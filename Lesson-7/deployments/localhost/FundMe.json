{
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeed",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MIN_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "fundingAddress",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getVersion",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "s_priceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x6f6d8ab549f53d3d18f96c0ce2723b906fcb9e080bf3d0b4102ec9184f45d011",
    "receipt": {
        "to": null,
        "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
        "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "transactionIndex": 0,
        "gasUsed": "1078227",
        "logsBloom": "0x
        "blockHash": "0x8c5309f2f684b306a6125c65f2bc7036e6bff003cab87eab4218d48b43ee5ad6",
        "transactionHash": "0x6f6d8ab549f53d3d18f96c0ce2723b906fcb9e080bf3d0b4102ec9184f45d011",
        "logs": [],
        "blockNumber": 2,
        "cumulativeGasUsed": "1078227",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x5FbDB2315678afecb367f032d93F642f64180aa3"],
    "numDeployments": 1,
    "solcInputHash": "72700f8ee162026e89f40016f499c98d",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    //Type Declaration-\\n    using PriceConverter for uint256;\\n\\n    //State variables-\\n    uint256 public constant MIN_USD = 50 * 10**18;\\n    address[] private s_funders; //array of all the addresses of the sender's\\n    mapping(address => uint256) private addressToAmountFunded; //see which address has funded how much\\n    address private immutable i_owner;\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    //Parameterizing the priceFeed address and passing it in with the constructor\\n    //that gets saved as a global variable to an AggregatorV3Interface type\\n\\n    //or passing it to the getConversionRate() function which passes it\\n    //to the getPrice() function which then calls the latestrounddata\\n\\n\\n    //events -none\\n    //modifier-\\n    modifier onlyOwner(){\\n        if(msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        i_owner = msg.sender;\\n    }\\n\\n    receive() external payable{\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require( //passes msg.value in getConversion function\\n            msg.value.getConversionRate(s_priceFeed) >= MIN_USD,\\n            \\\"Didn't send enough!\\\"\\n        );\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (uint256 i = 0; i < s_funders.length; i++) {\\n            address funderadd = s_funders[i];\\n            addressToAmountFunded[funderadd] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        //Transfer vs send vs call\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess);\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory, sorry!\\n        for (\\n            uint256 i = 0;\\n            i < funders.length;\\n            i++\\n        ) {\\n            address funder = funders[i];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // payable(msg.sender).transfer(address(this).balance);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n\\n//getters\\n    function getAddressToAmountFunded(address fundingAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return addressToAmountFunded[fundingAddress];\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    \\n    }\\n}\",\"keccak256\":\"0x0a9364cbe8b1223396de354dc33e8b993889db73267de693020a752c2dee3208\",\"license\":\"SEE LICENSE IN LICENSE\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        //eth in terms of usd; has 8 decimals\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4c3f0a9d5e26abb794f64c175cc9441b436b785c6cc1252ad2beedbedca70538\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b50604051620013af380380620013af833981810160405281019062000037919062000120565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6112226200018d600039600081816104780152818161060b015281816106a4015281816106f401526108d601526112226000f3fe6080604052600436106100955760003560e01c8063893d20e811610059578063893d20e8146101715780639e87a5cd1461019c578063b60d4288146101c7578063be2693f0146101d1578063d7b4750c146101db576100a4565b80630343fb25146100a95780630d8e6e2c146100e65780630ec3b02714610111578063213dbea21461013c5780633ccfd60b14610167576100a4565b366100a4576100a2610218565b005b600080fd5b3480156100b557600080fd5b506100d060048036038101906100cb9190610b99565b610353565b6040516100dd9190610bdf565b60405180910390f35b3480156100f257600080fd5b506100fb61039c565b6040516101089190610bdf565b60405180910390f35b34801561011d57600080fd5b50610126610443565b6040516101339190610c59565b60405180910390f35b34801561014857600080fd5b50610151610469565b60405161015e9190610bdf565b60405180910390f35b61016f610476565b005b34801561017d57600080fd5b506101866106a0565b6040516101939190610c83565b60405180910390f35b3480156101a857600080fd5b506101b16106c8565b6040516101be9190610c59565b60405180910390f35b6101cf610218565b005b6101d96106f2565b005b3480156101e757600080fd5b5061020260048036038101906101fd9190610cca565b61096c565b60405161020f9190610c83565b60405180910390f35b6802b5e3af16b1880000610257600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109b390919063ffffffff16565b1015610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028f90610d54565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e79190610da3565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561040657600080fd5b505afa15801561041a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043e9190610e0e565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104fb576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156105a65760008082815481106105205761051f610e3b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061059e90610e6a565b9150506104fe565b50600067ffffffffffffffff8111156105c2576105c1610eb3565b5b6040519080825280602002602001820160405280156105f05781602001602082028036833780820191505090505b5060009080519060200190610606929190610a8f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161064d90610f13565b60006040518083038185875af1925050503d806000811461068a576040519150601f19603f3d011682016040523d82523d6000602084013e61068f565b606091505b505090508061069d57600080fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610777576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107fa57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107b0575b5050505050905060005b815181101561088557600082828151811061082257610821610e3b565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061087d90610e6a565b915050610804565b50600067ffffffffffffffff8111156108a1576108a0610eb3565b5b6040519080825280602002602001820160405280156108cf5781602001602082028036833780820191505090505b50905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161091890610f13565b60006040518083038185875af1925050503d8060008114610955576040519150601f19603f3d011682016040523d82523d6000602084013e61095a565b606091505b505090508061096857600080fd5b5050565b600080828154811061098157610980610e3b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109bf836109ef565b90506000670de0b6b3a764000085836109d89190610f28565b6109e29190610fb1565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a3857600080fd5b505afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a70919061105a565b5050509150506402540be40081610a8791906110d5565b915050919050565b828054828255906000526020600020908101928215610b08579160200282015b82811115610b075782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610aaf565b5b509050610b159190610b19565b5090565b5b80821115610b32576000816000905550600101610b1a565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6682610b3b565b9050919050565b610b7681610b5b565b8114610b8157600080fd5b50565b600081359050610b9381610b6d565b92915050565b600060208284031215610baf57610bae610b36565b5b6000610bbd84828501610b84565b91505092915050565b6000819050919050565b610bd981610bc6565b82525050565b6000602082019050610bf46000830184610bd0565b92915050565b6000819050919050565b6000610c1f610c1a610c1584610b3b565b610bfa565b610b3b565b9050919050565b6000610c3182610c04565b9050919050565b6000610c4382610c26565b9050919050565b610c5381610c38565b82525050565b6000602082019050610c6e6000830184610c4a565b92915050565b610c7d81610b5b565b82525050565b6000602082019050610c986000830184610c74565b92915050565b610ca781610bc6565b8114610cb257600080fd5b50565b600081359050610cc481610c9e565b92915050565b600060208284031215610ce057610cdf610b36565b5b6000610cee84828501610cb5565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610d3e601383610cf7565b9150610d4982610d08565b602082019050919050565b60006020820190508181036000830152610d6d81610d31565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dae82610bc6565b9150610db983610bc6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dee57610ded610d74565b5b828201905092915050565b600081519050610e0881610c9e565b92915050565b600060208284031215610e2457610e23610b36565b5b6000610e3284828501610df9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e7582610bc6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ea857610ea7610d74565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610efd600083610ee2565b9150610f0882610eed565b600082019050919050565b6000610f1e82610ef0565b9150819050919050565b6000610f3382610bc6565b9150610f3e83610bc6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f7757610f76610d74565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fbc82610bc6565b9150610fc783610bc6565b925082610fd757610fd6610f82565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61100181610fe2565b811461100c57600080fd5b50565b60008151905061101e81610ff8565b92915050565b6000819050919050565b61103781611024565b811461104257600080fd5b50565b6000815190506110548161102e565b92915050565b600080600080600060a0868803121561107657611075610b36565b5b60006110848882890161100f565b955050602061109588828901611045565b94505060406110a688828901610df9565b93505060606110b788828901610df9565b92505060806110c88882890161100f565b9150509295509295909350565b60006110e082611024565b91506110eb83611024565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561112a57611129610d74565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561116757611166610d74565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111a4576111a3610d74565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111e1576111e0610d74565b5b82820290509291505056fea2646970667358221220e31383d9600269a948bd56804a10a4ed121003ea5835f4bbfbec282082ada68964736f6c63430008080033",
    "deployedBytecode": "0x6080604052600436106100955760003560e01c8063893d20e811610059578063893d20e8146101715780639e87a5cd1461019c578063b60d4288146101c7578063be2693f0146101d1578063d7b4750c146101db576100a4565b80630343fb25146100a95780630d8e6e2c146100e65780630ec3b02714610111578063213dbea21461013c5780633ccfd60b14610167576100a4565b366100a4576100a2610218565b005b600080fd5b3480156100b557600080fd5b506100d060048036038101906100cb9190610b99565b610353565b6040516100dd9190610bdf565b60405180910390f35b3480156100f257600080fd5b506100fb61039c565b6040516101089190610bdf565b60405180910390f35b34801561011d57600080fd5b50610126610443565b6040516101339190610c59565b60405180910390f35b34801561014857600080fd5b50610151610469565b60405161015e9190610bdf565b60405180910390f35b61016f610476565b005b34801561017d57600080fd5b506101866106a0565b6040516101939190610c83565b60405180910390f35b3480156101a857600080fd5b506101b16106c8565b6040516101be9190610c59565b60405180910390f35b6101cf610218565b005b6101d96106f2565b005b3480156101e757600080fd5b5061020260048036038101906101fd9190610cca565b61096c565b60405161020f9190610c83565b60405180910390f35b6802b5e3af16b1880000610257600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109b390919063ffffffff16565b1015610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028f90610d54565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e79190610da3565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561040657600080fd5b505afa15801561041a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043e9190610e0e565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104fb576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156105a65760008082815481106105205761051f610e3b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061059e90610e6a565b9150506104fe565b50600067ffffffffffffffff8111156105c2576105c1610eb3565b5b6040519080825280602002602001820160405280156105f05781602001602082028036833780820191505090505b5060009080519060200190610606929190610a8f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161064d90610f13565b60006040518083038185875af1925050503d806000811461068a576040519150601f19603f3d011682016040523d82523d6000602084013e61068f565b606091505b505090508061069d57600080fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610777576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107fa57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107b0575b5050505050905060005b815181101561088557600082828151811061082257610821610e3b565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061087d90610e6a565b915050610804565b50600067ffffffffffffffff8111156108a1576108a0610eb3565b5b6040519080825280602002602001820160405280156108cf5781602001602082028036833780820191505090505b50905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161091890610f13565b60006040518083038185875af1925050503d8060008114610955576040519150601f19603f3d011682016040523d82523d6000602084013e61095a565b606091505b505090508061096857600080fd5b5050565b600080828154811061098157610980610e3b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109bf836109ef565b90506000670de0b6b3a764000085836109d89190610f28565b6109e29190610fb1565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a3857600080fd5b505afa158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a70919061105a565b5050509150506402540be40081610a8791906110d5565b915050919050565b828054828255906000526020600020908101928215610b08579160200282015b82811115610b075782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610aaf565b5b509050610b159190610b19565b5090565b5b80821115610b32576000816000905550600101610b1a565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6682610b3b565b9050919050565b610b7681610b5b565b8114610b8157600080fd5b50565b600081359050610b9381610b6d565b92915050565b600060208284031215610baf57610bae610b36565b5b6000610bbd84828501610b84565b91505092915050565b6000819050919050565b610bd981610bc6565b82525050565b6000602082019050610bf46000830184610bd0565b92915050565b6000819050919050565b6000610c1f610c1a610c1584610b3b565b610bfa565b610b3b565b9050919050565b6000610c3182610c04565b9050919050565b6000610c4382610c26565b9050919050565b610c5381610c38565b82525050565b6000602082019050610c6e6000830184610c4a565b92915050565b610c7d81610b5b565b82525050565b6000602082019050610c986000830184610c74565b92915050565b610ca781610bc6565b8114610cb257600080fd5b50565b600081359050610cc481610c9e565b92915050565b600060208284031215610ce057610cdf610b36565b5b6000610cee84828501610cb5565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610d3e601383610cf7565b9150610d4982610d08565b602082019050919050565b60006020820190508181036000830152610d6d81610d31565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dae82610bc6565b9150610db983610bc6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dee57610ded610d74565b5b828201905092915050565b600081519050610e0881610c9e565b92915050565b600060208284031215610e2457610e23610b36565b5b6000610e3284828501610df9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e7582610bc6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ea857610ea7610d74565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610efd600083610ee2565b9150610f0882610eed565b600082019050919050565b6000610f1e82610ef0565b9150819050919050565b6000610f3382610bc6565b9150610f3e83610bc6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f7757610f76610d74565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fbc82610bc6565b9150610fc783610bc6565b925082610fd757610fd6610f82565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61100181610fe2565b811461100c57600080fd5b50565b60008151905061101e81610ff8565b92915050565b6000819050919050565b61103781611024565b811461104257600080fd5b50565b6000815190506110548161102e565b92915050565b600080600080600060a0868803121561107657611075610b36565b5b60006110848882890161100f565b955050602061109588828901611045565b94505060406110a688828901610df9565b93505060606110b788828901610df9565b92505060806110c88882890161100f565b9150509295509295909350565b60006110e082611024565b91506110eb83611024565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561112a57611129610d74565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561116757611166610d74565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111a4576111a3610d74565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111e1576111e0610d74565b5b82820290509291505056fea2646970667358221220e31383d9600269a948bd56804a10a4ed121003ea5835f4bbfbec282082ada68964736f6c63430008080033",
    "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 64,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 68,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "addressToAmountFunded",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 73,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
